<footer class="text-center text-muted py-4">
  <small>© @(new Date().getFullYear()) Skalp</small>
</footer>


<div class="toast-container position-fixed bottom-0 end-0 p-3">
  <div id="appToast" class="toast text-bg-danger" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
      <div class="toast-body" id="toastMsg">Xəta</div>
      <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
  </div>
</div>

<script src="/app.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
  (function(){
    const ocProfile = new bootstrap.Offcanvas('#offcanvasProfile');
    const ocSettings = new bootstrap.Offcanvas('#offcanvasSettings');
    const ocPassword = new bootstrap.Offcanvas('#offcanvasPassword');

    document.getElementById('btnOpenProfile').addEventListener('click', async function(e){
      e.preventDefault();
      try {
        const r = await fetch('/api/me/profile');
        if (r.ok) {
          const { data } = await r.json();
          document.getElementById('profile_full_name').value = data.full_name || '';
          document.getElementById('profile_email').value = data.email || '';
        }
      } catch(_){}
      ocProfile.show();
    });

    document.getElementById('profileForm').addEventListener('submit', async function(e){
      e.preventDefault();
      const msg = document.getElementById('profileMsg');
      msg.textContent=''; msg.className='small';
      const payload = {
        full_name: document.getElementById('profile_full_name').value.trim(),
        email: document.getElementById('profile_email').value.trim()
      };
      try {
        const r = await fetch('/api/me/profile', { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(payload) });
        if (!r.ok) throw new Error('Yadda saxlanmadı');
        msg.textContent='Yadda saxlandı'; msg.classList.add('text-success');
      } catch(err){ msg.textContent=err.message; msg.classList.add('text-danger'); }
    });

    document.getElementById('btnOpenSettings').addEventListener('click', async function(e){
      e.preventDefault();
      try {
        const r = await fetch('/api/me/settings');
        if (r.ok) {
          const { data } = await r.json();
          ['gpt_token','gpt_key','deepseek_token','deepseek_key','binance_token','binance_key','binance_user_code']
            .forEach(k => { const el = document.getElementById(k); if (el) el.value = data?.[k] || ''; });
        }
      } catch(_){}
      ocSettings.show();
    });

    document.getElementById('btnOpenPassword').addEventListener('click', function(e){
      e.preventDefault();
      document.getElementById('old_password').value = '';
      document.getElementById('new_password').value = '';
      document.getElementById('confirm_password').value = '';
      document.getElementById('passwordMsg').textContent = '';
      document.getElementById('passwordMsg').className = 'small';
      ocPassword.show();
    });

    document.getElementById('passwordForm').addEventListener('submit', async function(e){
      e.preventDefault();
      const msg = document.getElementById('passwordMsg');
      msg.textContent=''; msg.className = 'small';
      const payload = {
        oldPassword: document.getElementById('old_password').value,
        newPassword: document.getElementById('new_password').value,
        confirmPassword: document.getElementById('confirm_password').value
      };
      try {
        const r = await fetch('/api/me/password', { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(payload) });
        const data = await r.json();
        if (!r.ok || data.success === false) throw new Error(data.message || 'Yadda saxlanmadı');
        msg.textContent = 'Şifrə yeniləndi';
        msg.classList.add('text-success');
      } catch(err){
        msg.textContent = err.message;
        msg.classList.add('text-danger');
      }
    });

    document.getElementById('settingsForm').addEventListener('submit', async function(e){
      e.preventDefault();
      const msg = document.getElementById('settingsMsg');
      msg.textContent=''; msg.className='small';
      const payload = {
        gpt_token: document.getElementById('gpt_token').value || null,
        gpt_key: document.getElementById('gpt_key').value || null,
        deepseek_token: document.getElementById('deepseek_token').value || null,
        deepseek_key: document.getElementById('deepseek_key').value || null,
        binance_token: document.getElementById('binance_token').value || null,
        binance_key: document.getElementById('binance_key').value || null,
        binance_user_code: document.getElementById('binance_user_code').value || null,
      };
      try {
        const r = await fetch('/api/me/settings', { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(payload) });
        if (!r.ok) throw new Error('Yadda saxlanmadı');
        msg.textContent='Yadda saxlandı'; msg.classList.add('text-success');
      } catch(err){ msg.textContent=err.message; msg.classList.add('text-danger'); }
    });

    document.getElementById('btnLogout').addEventListener('click', async function(e){
      e.preventDefault();
      try { await fetch('/auth/logout', { method:'POST' }); } catch(_){ }
      window.location.href = '/login';
    });
  })();
</script>
